{#
/**
 * @file
 * Default theme implementation to display the basic html structure of a single
 * Drupal page.
 *
 * Variables:
 * - $css: An array of CSS files for the current page.
 * - $language: (object) The language the site is being displayed in.
 *   $language->language contains its textual representation.
 *   $language->dir contains the language direction. It will either be 'ltr' or
 *   'rtl'.
 * - $rdf_namespaces: All the RDF namespace prefixes used in the HTML document.
 * - $grddl_profile: A GRDDL profile allowing agents to extract the RDF data.
 * - $head_title: A modified version of the page title, for use in the TITLE
 *   tag.
 * - $head_title_array: (array) An associative array containing the string parts
 *   that were used to generate the $head_title variable, already prepared to be
 *   output as TITLE tag. The key/value pairs may contain one or more of the
 *   following, depending on conditions:
 *   - title: The title of the current page, if any.
 *   - name: The name of the site.
 *   - slogan: The slogan of the site, if any, and if there is no title.
 * - $head: Markup for the HEAD section (including meta tags, keyword tags, and
 *   so on).
 * - $styles: Style tags necessary to import all CSS files for the page.
 * - $scripts: Script tags necessary to load the JavaScript files and settings
 *   for the page.
 * - $page_top: Initial markup from any modules that have altered the
 *   page. This variable should always be output first, before all other dynamic
 *   content.
 * - $page: The rendered page content.
 * - $page_bottom: Final closing markup from any modules that have altered the
 *   page. This variable should always be output last, after all other dynamic
 *   content.
 * - $classes String of classes that can be used to style contextually through
 *   CSS.
 *
 * @ingroup templates
 *
 * @see bootstrap_preprocess_html()
 * @see template_preprocess()
 * @see template_preprocess_html()
 * @see template_process()
 */
#}
{%
  set body_classes = [
    logged_in ? 'user-logged-in',
    not root_path ? 'path-frontpage' : 'path-' ~ root_path|clean_class,
    node_type ? 'page-node-type-' ~ node_type|clean_class,
    db_offline ? 'db-offline',
    theme.settings.navbar_position ? 'navbar-is-' ~ theme.settings.navbar_position,
    theme.has_glyphicons ? 'has-glyphicons',
  ]
%}
<!DOCTYPE html>
<html {{ html_attributes }}>
  <head>
      <meta property="og:image" content={{ img_path }} >

      <!-- <meta property="fb:app_id" content="221198119132924">
      <meta property="og:type" content="website"/>
       <meta property="og:image" content= > -->
      {# <meta property="og:url" content="https://dev-deped-dauin.pantheonsite.io/"> #}
      {# <meta property="og:title" content="Dauin Ni Bai">
      <meta property="og:description" content="Its More Fun in Dauin"> #}
        <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-163503291-1"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'UA-163503291-1');
    </script>

    <script data-ad-client="ca-pub-7062341063801103" async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>

    <head-placeholder token="{{ placeholder_token|raw }}">
    <title>{{ head_title|safe_join(' | ') }}</title>
    <css-placeholder token="{{ placeholder_token|raw }}">
    <js-placeholder token="{{ placeholder_token|raw }}">
  </head>
  <body{{ attributes.addClass(body_classes) }} >

    {# For FB #}

  <script>
      function statusChangeCallback(response) {  // Called with the results from FB.getLoginStatus().
          if(document.getElementsByClassName('user-logged-in').length > 0 ){
                document.getElementsByClassName('fb-login-button')[0].style.display = 'none';
          }
          else{
            if (response.status === 'connected') {   // Logged into your webpage and Facebook.
              console.log('token  ' + response.authResponse.accessToken);
              document.getElementsByClassName('fb-login-button')[0].style.display = 'none';
              getAPI();

              // document.location.reload();
            }
          }
      }

      function checkLoginState() {               // Called when a person is finished with the Login Button.
        FB.getLoginStatus(function(response) {   // See the onlogin handler
          statusChangeCallback(response);
        });
      }
      window.fbAsyncInit = function() {
        FB.init({
          appId      : '221198119132924',
          xfbml      : true,                     // Parse social plugins on this webpage.
          cookie     : true,                     // Enable cookies to allow the server to access the session.
          version    : 'v6.0'           // Use this Graph API version for this call.
        });
      FB.getLoginStatus(function(response) {   // Called after the JS SDK has been initialized.
          statusChangeCallback(response);        // Returns the login status.
        });
      };


      (function(d, s, id) {                      // Load the SDK asynchronously
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "https://connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(js, fjs);
      }(document, 'script', 'facebook-jssdk'));

     function getAPI() {
        FB.api('/me','GET',{"fields":"id,name,email,picture.width(150).height(150)"}, function(response) {
          // login(response);
          jQuery.get('/fb_login/fetch?id=' +response.id+'&uname=' +  response.name +'&email=' + response.email,function(data,status){

          });
          jQuery.post('/user/login',
                {
                  name:response.name,
                  pass:'1234',
                  form_build_id:'form-JZ3Zvl6-ASvl5YRoXrNXxFBEUpRpKdm5jvwz8zHq7eE',
                  form_id:'user_login_form',
                  op:'Log+in',
                },function( data, status, xhr) {
                    console.log('status : ' + status + ' LOGIN' );
                    location.reload(true);
                  }
          )
        });
      }

      window.onload = function(){
        var a = document.getElementById('loader-wrapper');
        a.style.display = 'none';
        // console.log("loader ready");
      }

      // async function login(response_fb) {
      //    let response = await jQuery.get('/fb_login/fetch?
      //          id=' +      this.response_fb.id +
      //         '&uname=' +  this.response_fb.name +
      //         '&email=' +  this. response_fb.email
      //         );
      //   await new Promise((resolve, reject) => setTimeout(resolve, 3000));
      // }

      // (function($) {
      //   Drupal.AjaxCommands.prototype.fivestarUpdate = function(ajax, response, status) {
      //     console.log(status);
      //     console.log(response);
      //     console.log(ajax);
      //     // response.selector = $('.fivestar-form-item', ajax.element.form);
      //     // ajax.commands.insert(ajax, response, status);
      //   };
      // })(jQuery);

    </script>



    <a href="#main-content" class="visually-hidden focusable skip-link">
      {{ 'Skip to main content'|t }}
    </a>
    {{ page_top }}
    {{ page }}
    {{ page_bottom }}
    <div id="loader-wrapper">
        <div id="loader"></div>
        <div class="loader-section section-left"></div>
        <div class="loader-section section-right"></div>
    </div>

    <js-bottom-placeholder token="{{ placeholder_token|raw }}">
  </body>
</html>
